<<<<<<< HEAD
#!/usr/bin/env bash

check_factor()
{
	if [ $# -ne 3 ];
        then
                args=("$@")
                count=0
                num2=1
                for a in ${args[*]};
                do
                        if [ $count -gt 1 ];
                        then
                                num2=$(echo $a*$num2 | bc)
                        fi
                        count=$((count + 1))
                done
        else
                num2=$3
        fi

        num1=$2
        num=$(echo "$1" | tr ':' '=')

        result=$(echo "if($num2 > $num1) 1 else 0" | bc)
	        if ((result == 1)); then
		        numcp=$num1
		        num1=$num2
		        num2=$numcp
                fi

        echo "$num$num1*$num2"
}

if [ $# -ne 1 ]
then
        echo 'Usage: factors <file>'
        exit 1
else

        while read i
        do

                result=$(factor "$i")
                check_factor $result

        done < "$1"
fi
=======

m sys import argv
from math import sqrt


def open_read_file(file_name):
    """read from file
    add to array
    """
    with open(file_name, "r", encoding="utf-8") as file:
        lines = file.readlines()
    number_to_factor = []
    for line in lines:
        number_to_factor.append(int(line))
    return number_to_factor


def find_and_times(n):
    """factor each
    n given
    """
    for i in range(1, n):
        if n == ((n // i) * i):
            print("{}={}*{}".format(n, (n // i), i))
            break


def fac_list(ls):
    """factor each
    num in ls
    """
    for i in ls:
        find_and_times(i)


if len(argv) == 2:
    fac_list(open_read_file(argv[1]))
m sys import argv
from math import sqrt


def open_read_file(file_name):
    """read from file
    add to array
    """
    with open(file_name, "r", encoding="utf-8") as file:
        lines = file.readlines()
    number_to_factor = []
    for line in lines:
        number_to_factor.append(int(line))
    return number_to_factor


def find_and_times(n):
    """factor each
    n given
    """
    for i in range(1, n):
        if n == ((n // i) * i):
            print("{}={}*{}".format(n, (n // i), i))
            break


def fac_list(ls):
    """factor each
    num in ls
    """
    for i in ls:
        find_and_times(i)


if len(argv) == 2:
    fac_list(open_read_file(argv[1]))
m sys import argv
from math import sqrt


def open_read_file(file_name):
    """read from file
    add to array
    """
    with open(file_name, "r", encoding="utf-8") as file:
        lines = file.readlines()
    number_to_factor = []
    for line in lines:
        number_to_factor.append(int(line))
    return number_to_factor


def find_and_times(n):
    """factor each
    n given
    """
    for i in range(1, n):
        if n == ((n // i) * i):
            print("{}={}*{}".format(n, (n // i), i))
            break


def fac_list(ls):
    """factor each
    num in ls
    """
    for i in ls:
        find_and_times(i)


if len(argv) == 2:
    fac_list(open_read_file(argv[1]))
>>>>>>> e5f1fa71e5e3d77d804a4962d4f804e9c54a74cf
